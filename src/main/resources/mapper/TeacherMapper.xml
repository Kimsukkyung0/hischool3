<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.secondproject.teacher.TeacherMapper">

    <select id="selSignedStudent" resultType="SelSignedStudentVo">
        SELECT user_id userId, class_id classId, apr_yn aprYn, nm snm, birth, phone, email
        FROM user
        WHERE role = "ROLE_STD"
        AND apr_yn = 1
        AND del_yn = 0
        AND class_id = #{classId}
    </select>


    <select id="selUnsignedStudent" resultType="SelUnsignedStudentVo">
        SELECT user_id userId, van_id classId, apr_yn aprYn, nm snm, birth, phone, email
        FROM user
        WHERE role_type = "STD"
        AND apr_yn = 0
        AND enroll_state = "ENROLL"
        AND van_id = #{classId}
    </select>


    <select id="selAcaResult" resultType="SelAcaResultVo">
        SELECT A.result_id resultId, A.`year`, A.semester , A.mid_final mf
        , B.category_id detailCateId, B.nm detailNm, C.category_id cateId
        ,C.nm nm , A.score, A.rating , A.class_rank cr, A.whole_rank wr
        FROM aca_result A
        INNER JOIN subject B
        ON B.subject_id = A.subject_id
        INNER JOIN sbj_category C
        ON C.category_id = B.category_id
        WHERE user_id = #{userId}
        <if test='year != null and year != ""'>
            AND A.year = #{year}
        </if>
        <if test='semester != null and semester != ""'>
            AND A.semester = #{semester}
        </if>
        <if test='mf != null and mf != ""'>
            AND A.mid_final = #{mf}
        </if>
        ORDER BY A.semester DESC
        , mf DESC
    </select>


    <select id="selMockResult" resultType="SelMockResultVo">
        SELECT A.result_id resultId, A.`year`, A.mon, B.category_id detailCateId , B.nm detailNm
        , C.category_id cateId, C.nm, A.standard_score sc, A.rating , A.percent
        FROM mock_result A
        INNER JOIN subject B
        ON B.subject_id = A.subject_id
        INNER JOIN sbj_category C
        ON C.category_id = B.category_id
        WHERE A.user_id = #{userId}
        <if test='year != null and year != ""'>
            AND A.year = #{year}
        </if>
        <if test='mon != null and mon != ""'>
            AND A.mon = #{mon}
        </if>
        ORDER BY A.mon desc
    </select>


    <update id="acceptStudent">
        UPDATE user
        SET apr_yn = 1
        WHERE user_id = #{userId}
        AND del_yn = 0
    </update>


    <!--    <update id="rejectStudent">-->
    <!--        UPDATE user-->
    <!--        SET apr_yn = 2-->
    <!--        WHERE user_id = #{userId}-->
    <!--    </update>-->


    <update id="cancelAcceptStd">
        UPDATE user
        SET apr_yn = 0
        WHERE user_id = #{userId}
    </update>

    <update id="updMockResult">
        UPDATE mock_result
        SET year = #{year}
        , mon = #{mon}
        , standard_score = #{standardScore}
        , rating = #{rating}
        , percent = #{percent}
        , subject_id = #{subjectId}
        WHERE result_id = #{resultId}
    </update>


    <update id="updAcaResult">
        UPDATE aca_result
        SET year = #{year}
        , subject_id = #{subjectId}
        , semester = #{semester}
        , mid_final = #{mf}
        , score = #{score}
        , rating = #{rating}
        , class_rank = #{classRank}
        , whole_rank = #{wholeRank}
        WHERE result_id = #{resultId}
    </update>


    <delete id="delMockResult">
        DELETE
        FROM mock_result
        WHERE result_id = #{resultId}
    </delete>


    <delete id="delAcaResult">
        DELETE
        FROM aca_result
        WHERE result_id = #{resultId}
    </delete>


    <select id="classStudent">
        SELECT COUNT(C.class_id) classid FROM van A
        INNER JOIN school B
        ON A.school_id = B.school_id
        INNER JOIN user C
        ON A.class_id = C.class_id
        WHERE C.class_id = #{classid} AND C.role ="ROLE_STD" and apr_yn = 1 and del_yn = 0
    </select>

    <select id="aprStudent">
        SELECT count(user_id) userid FROM user
        WHERE apr_yn =0 AND class_id = #{classid} AND role = "ROLE_STD"
    </select>




<!--JPA 전환작업완료
    <select id="getLatestTest">
        select MAX(concat(year,semester,mid_final)) from aca_result
    </select>

        <select id="getNumberOfStudentByCate">
        SELECT COUNT(C.category_id)
        from user A
        INNER JOIN aca_result B ON A.user_id = B.user_id
        INNER JOIN subject C ON B.subject_id = C.subject_id
        INNER JOIN sbj_category D on C.category_id = D.category_id
        where A.apr_yn=1 and A.role_type = 'STD' and C.category_id=#{categoryId} and A.van_id = #{classId} AND
        concat(year,semester,mid_final) = 202312
    </select>

        <select id="teacherAcaGraph">
        select D.nm cateNm,B.rating rating, count(B.rating) as percentage
        from user A
        INNER JOIN aca_result B ON A.user_id = B.user_id
        INNER JOIN subject C ON B.subject_id = C.subject_id
        INNER JOIN sbj_category D on C.category_id = D.category_id
        where A.apr_yn=1 and A.role_type = 'STD' and C.category_id = #{categoryId} and A.van_id =#{classId} and
        concat(year,semester,mid_final) = 202312
        group by rating
    </select>
    -->

    <select id = "selAcaTestResultByDatesAndPeriodAndStudent">
        SELECT A.result_id resultId, A.year, A.semester, A.mid_final midFinal, C.nm cateName, B.nm nm,
        A.score, A.rating, A.class_rank classRank, A.whole_rank wholeRank
        FROM aca_result A
        INNER JOIN subject B
        ON A.subject_id = B.subject_id
        INNER JOIN sbj_category C
        ON C.category_id = B.category_id
        where A.user_id = #{userId}
        <if test='year != null and year != ""'>
            AND A.year = #{year}
        </if>
        <if test='semester != null and semester != ""'>
            AND A.semester = #{semester}
        </if>
        <if test='midFinal != null and midFinal != ""'>
            AND A.mid_final = #{midFinal}
        </if>
        ORDER BY A.year desc, A.semester desc, A.mid_final desc
        <if test='semester != null and semester != ""'>
            ,#{semester} desc
        </if>
        <if test='midFinal != null and midFinal != ""'>
            , #{midFinal} desc
        </if>
    </select>

    <select id = "selMockTestResultByDates">
        SELECT A.result_id resultId, A.year, A.mon, C.nm cateName, B.nm,
        A.standard_score standardScore, A.rating, A.percent
        FROM mock_result A
        INNER JOIN subject B
        ON A.subject_id = B.subject_id
        INNER JOIN sbj_category C
        ON C.category_id = B.category_id
        where A.user_id = #{userId}
        <if test='year != null and year != ""'>
            AND A.year = #{year}
        </if>
        <if test='mon != null and mon != ""'>
            AND A.mon = #{mon}
        </if>
        ORDER BY A.year desc, A.mon desc, cateName asc
        <if test='year != null and year != ""'>
            , #{year} desc
        </if>
        <if test='mon != null and mon != ""'>
            , #{mon} desc
        </if>
    </select>
    <!-- subject->teacher -->

     <insert id="mockins">
        INSERT INTO mock_result
        (user_id,subject_id,year,mon,standard_score,rating,percent)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userid},#{item.subjectid},YEAR(NOW()),#{item.mon},#{item.standardscore},#{item.rating},#{item.percent})
        </foreach>
    </insert>

    <insert id="acasubject">
        INSERT INTO aca_result
        (user_id,subject_id,YEAR,semester,MID_final,score,rating,class_rank,whole_rank)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userid},#{item.subjectid},YEAR(NOW()),#{item.semester},#{item.midfinal},
            #{item.score},#{item.rating},#{item.classrank},#{item.wholerank})
        </foreach>
    </insert>

    <select id="mocktotal">
        SELECT SUM(cnt_rating)
        FROM (
        SELECT COUNT(rating) AS cnt_rating
        FROM mock_result A
        INNER JOIN subject B
        ON A.subject_id = B.subject_id
        INNER JOIN sbj_category C
        ON B.category_id = C.category_id
        INNER JOIN user D
        ON A.user_id = D.user_id
        WHERE D.van_id = #{vanId} AND B.category_id = 2 AND A.year = YEAR(NOW())
        AND mon = 6
        GROUP BY B.nm, rating
        ) AS derived_table;
    </select>


    <select id="mockgraph">
        <!--        SELECT B.nm, rating, COUNT(rating) ratio-->
        <!--        FROM mock_result A-->
        <!--        INNER JOIN subject B-->
        <!--        ON A.subject_id = B.subject_id-->
        <!--        INNER JOIN sbj_category C-->
        <!--        on B.category_id = c.category_id-->
        <!--        INNER JOIN user D-->
        <!--        ON A.user_id = D.user_id-->
        <!--        WHERE D.class_id = #{classId} and B.category_id = #{categoryId}-->
        <!--        and A.year = year(NOW()) and mon = 6-->
        <!--        GROUP BY B.nm, rating;-->
        SELECT B.nm, rating, COUNT(rating) ratio
        FROM mock_result A
        INNER JOIN subject B
        ON A.subject_id = B.subject_id
        INNER JOIN sbj_category C
        on B.category_id = c.category_id
        INNER JOIN user D
        ON A.user_id = D.user_id
        WHERE D.van_id = #{vanId} and B.category_id = #{categoryId}
        and A.year = year(NOW()) and mon = 9
        GROUP BY B.nm, rating;

    </select>

    <select id="selaca">
        SELECT B.category_id categoryId, A.subject_id subjectId,A.score,A.rating,A.class_rank classRank ,A.whole_rank
        wholeRank, A.semester,A.mid_final midfinal FROM
        aca_result A
        INNER JOIN
        subject B
        ON A.subject_id = B.subject_id
        WHERE result_id = #{resultId}
    </select>

    <select id="selmock">
        SELECT B.category_id categoryId , A.subject_id subjectId,A.standard_score standardScore,A.rating,A.percent,A.mon
        FROM
        mock_result A
        INNER join
        subject B
        ON A.subject_id = B.subject_id
        WHERE result_id = #{resultId};
    </select>



</mapper>
